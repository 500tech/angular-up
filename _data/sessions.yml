-
  id: "door-open"
  title: "Doors open, registration, swag and light breakfast"
  place: "Main Foyer"
  service: true
  description: ""
-
  id: "break"
  title: "Break"
  place: "Main Foyer"
  service: true
  description: ""
-
  id: "talks-in-main-halls"
  title: "Talks in Track A & B"
  place: "Main Foyer"
  service: true
  description: ""
-
  id: "lunch"
  title: "Lunch Break"
  place: "Hotel Restaurant"
  service: true
-
  id: "coming-soon"
  title: "coming soon"
  description: ""
  place: ""
  service: true
-
  id: "quiz"
  title: "<b>Angular Quiz</b> - Hosted by <b>Shay Reznik</b>"
  place: "Hall A"
  service: true
-
  id: "opening-words"
  title: "Opening Words"
  description: ""
  place: "Hall A"
  service: true
-
  id: "prizes"
  title: "Prizes & Raffle Winners"
  description: ""
  place: "Hall A"
  service: true
-
  id: "Rob"
  title: "Keynote - What's new and coming in Angular"
  place: "Hall A"
  description: "Hear from Rob, @angular core team and DevRel, and author of NgRx, about the new and exciting in Angular"
  subtype: presentation
  center: true
  speakers: ["Rob"]
-
  id: "Kim"
  title: "The Science of Authenticating Angular Apps"
  description: "<p>
    Authentication can be a daunting topic for many developers, including those of us working in the landscape of web apps.
    </p><p>
    How does cookie-based authentication work? How does token-based authentication work? Don't store tokens in local storage? New SPA authorization best practices from the IETF?! What are the shortcomings and advantages we need to consider when adding authentication to Angular Single Page Applications?
    </p><p>
    I'll also talk about the tools the Angular platform provides out of the box to make adding authentication and protecting routes easier for the developer.
    </p>"
  # advanced: false
  subtype: presentation
  speakers: ["Kim"]
-
  id: "Nir"
  title: "The year of the cat"
  description: "<p>
    Letâ€™s learn how you can leverage your existing Angular development skills and pattern to build a robust, scalable NodeJS application.
    </p><p>
    During this session, we will create a feature from the ground-up - database to the client side - using everything you already know (but nobody told youâ€¦) Get ready for a live coding session, (while I'm dressed as a cat). What can go wrong?
    </p>"
  subtype: presentation
  # advanced: false
  speakers: ["Nir"]
-
  id: "Uri"
  title: "It's Alive! Machine Learning Writes Your Code! ðŸ§ "
  description: "<p>
    As developers, we get paid to write bugs and then fix them. At first, it's exciting, but after some time, bugs tend to start repeating, and that's why we come up with new libraries, tools and framework all the time - to make things more exciting (and our lives easier). But what if the code could be written for us instead?
  </p><p>
    In this session I am going to employ state-of-the-art machine learning algorithms to automatically write TypeScript code. You will see how we trained a model using large dataset of open-source code, and learn how we cleaned up and prepared the data. We will also go over the basics of machine learning as we show you what we did. It's going to be mind-blowing, much fun, and a little bit dangerous. Are you prepared?
  </p>"
  subtype: presentation
  # advanced: false
  speakers: ["Uri"]
-
  id: "Frosty"
  title: "Adv Lazy Loading w/ Angular"
  description: "<p>
  If you need to lazy load components when the route changes, Angular has got you covered. But what if you want to lazy load code when something else happens besides a route change? Maybe we can load a different set of admin services if a certain user logs in. Perhaps when we open a modal that's not tied to a route, we want to load a large library and do some Angular things with it.
  </p>
  <p>
  No matter your scenario, this session will show you how you can use Angular and the Angular CLI to accomplish what you need to
  </p>"
  subtype: presentation
  # advanced: true
  speakers: ["Frosty"]
-
  id: "Craig"
  title: "Angular Universal in the Real World"
  description: "<p>
    WHHHHOOOOOSSSSSSHHHHHHHHHH!!!!!! ðŸš€ðŸš€ðŸš€
  </p><p>
    Did you hear that!? Itâ€™s the sound of a blazing-fast Angular Universal application, rocketing itâ€™s way straight to a users' device! Angular Universal offers a solution to some really hard problems - first render performance, search crawler support, and server-client state-transferâ€¦ but what does it really look like in the real world?
  </p><p>
    Thereâ€™s a tonne of information out there on how to get started with Angular Universal - but what about the next steps? Let's go over some patterns and principles that can take our Angular Universal applications to Infinity and Beyond!
  </p>
  "
  subtype: presentation
  # advanced: true
  speakers: ["Craig"]
-
  id: "Eliran"
  title: "Ivy is coming!"
  description: "<p>
    After eight great seasons (well, maybe the first one wasnâ€™t that good, at least they killed it in the end), itâ€™s finally coming for real - Ivy is HERE!
  </p><p>
    But, now what? What are the benefits? Will my bundle shrink in size? Are my builds going to be faster? 
  </p><p>
    In this talk, I will demonstrate why Angular Ivy is truly a game changer. We will understand how we can leverage the Ivy renderer to create higher order components (HOC), how to import non-routable components dynamically, how it reduces our bundle size, how it helps us with much easier debugging tools and how our build process becomes much faster.
  </p>"
  subtype: presentation
  # advanced: true
  speakers: ["Eliran"]
-
  id: "Younes"
  title: "Boost your Time to Market by Dancing the Limbo"
  description: "<p>
    A colleague begs you again to review some merge request. You hesitate between closing your eyes and accept the changes or ask him to rewrite the whole thing but you end up leaving some minor changes suggestions in order not to hurt someoneâ€™s feelings.
    The next release is approaching but you canâ€™t tell the consequences.
    Release day is here and things go wrong! Tickets and issues start flying between teams.
  </p><p>
    You decide to take action by:</p>
  <ul>
    <li>adding a manual validation step to the development workflow</li>
    <li>producing documents that describe the content and outcome of every release</li>
    <li>releasing only on tuesday or wednesday</li>
    <li>warning your family that you will be back home quite late on these release days.</li>
  </ul>
  <p>
    Itâ€™s unbearable! You decide to release less frequently.
  </p><p>
    In short, your development workflow is killing your time to market and demotivating your teams. You donâ€™t want to share anything similar with this caricature?
  </p><p>
    Letâ€™s discover new development workflows based on code timeboxing, single branch, TCR (test && commit || revert)â€¦ and reduce the delay between code changes and production to minutes.
  </p>"
  subtype: presentation
  # advanced: true
  speakers: ["Younes"]
-
  id: "Martin"
  title: "SEO demystified"
  description: "More details soon"
  subtype: presentation
  # advanced: false
  speakers: ["Martin"]
-
  id: "Gil"
  title: "I'm with Web Components and Web Components are with Me"
  description: "
  <p>
    Web development changed dramatically during the last years. With the enormous amount of JavaScript libraries and the new HTML5 standard, today it is much easier to create web apps. When building a web app, you will probably want to reuse some of the web components you built. But how can you do that with the current state of HTML? 
  </p><p>
    One of the new and emerging web standards is Web Components. The Web Components standard enables you to create reusable web components that include HTML, CSS and JavaScript. On the other hand, crafting raw components can be cumbersome. 
  </p><p>
    In this session you will get to know Angular Elements, the new way to write reusable Angular Web Components.
  </p>
  "
  subtype: presentation
  # advanced: true
  speakers: ["Gil"]
-
  id: "John"
  title: "Using MockStore in NgRx 8"
  description: "<p>
    What's new in NgRx testing?  Actually, a lot!  The two most recent releases of NgRx have quietly introduced and iterated the @ngrx/store/testing module, giving developers easier ways to test store-dependent components and services.  
  </p><p>
    In this session, I will demonstrate testing store-dependent components and services using the NgRx MockStore, which provides the ability to mock the entire state or individual selectors.  Say goodbye to the StoreModule!
  </p>"
  subtype: presentation
  # advanced: true
  speakers: ["John"]
-
  id: "Mike"
  title: "Cross Platform with Angular and Ionic 4"
  description: "<p>
    Ionic and Angular have been best friends since the early days of AngularJS and Ionic 1. With the 4.0 of Ionic Framework released, Ionic has doubled down on its partnership with Angular by adopting the latest and greatest Angular tooling. Weâ€™ll look at whatâ€™s new in Ionic and what Ionic has to offer the Angular community.
  </p><p>
    The talk is going to go into detail about some of the new features we've been working on in Ionic to better integrate with the greater Angular Ecosystem and how you can build better apps with these features.
  </p>"
  subtype: presentation
  # advanced: false
  speakers: ["Mike"]
-
  id: "Revital"
  title: "Migrations - An Upgrade Story"
  description: "<p>
    Many startups are embarking on the journey of bringing AngularJS applications up to modern-day web development standards with Angular, and there are a lot of approaches.
    It can be challenging for startups to balance business requirements, scarce resources, and aggressive deadlines.
  </p><p>
    In this talk we will take you through the journey we had and the solution for incremental upgrade that we adopted
  </p>"
  subtype: presentation
  # advanced: false
  class: lightning
  speakers: ["Revital", "Doron"]
-
  id: "Sebastian"
  title: "Building a chatbot for an Angular Application"
  description: "<p>
    Chatbots introduce a whole new way for users to interact with your websites. A good chatbot can save your users from long and complicated forms, cut down on support requests, and make your services more approachable.
  </p><p>
    If you've ever wondered how do build a chatbot, then this session is for you. You will:
  </p><p>
  <ul>
    <li>Dive into the core concepts of what makes a chatbot.</li>
    <li>Learn how to employ Machine Learning and Natural Language Processing to create a conversation flow that feels 100% natural.</li>
    <li>Look at a variety of possible conversations and challenges that go with them. </li>
  </ul>
  <p>
    But more importantly, you will learn how to build a fully functioning chatbot and add it to your Angular app in less than 15 minutesâ€”all without a single IF statement.
  </p>
  "
  subtype: presentation
  # advanced: false
  speakers: ["Sebastian"]
-
  id: "Jesse"
  title: "Advanced NgRx Techniques"
  description: "<p>
    NgRx enables Angular developers to build reactive solutions for managing state, events and data using principles inspired by redux and fueled by RxJs.
    We will quickly review the best practices of NgRx and then dive into NgRx patterns, libraries, testing, and complex actions/effects.
  </p><p>
    The talk will wrap up with advanced error handling techniques that make debugging NgRx a cinche.
    This talk is perfect for those developer learning about NgRx as well as seasoned veterans that want to expand their understanding.
  </p>"
  subtype: presentation
  # advanced: true
  speakers: ["Jesse"]
-
  id: "Michael"
  title: "Operate heavily dynamic UIâ€™s with RxJS"
  description: "<p>
    The web changed a lot in the past years, more and more applications provide UIâ€™s that are heavily interactive and often also include some background tasks.
  </p><p>
    In comparison to the past years, frontend developers have to deal with new architectural
    problems and challenges. Not only things like a service layer and MVC found itâ€™s way into the frontend but also database-like structures have to be managed, updated and read from. Especially managing data structures is one of the harder problems.
  </p><p>
    Learn the theory and praxis of Event-Sourcing and CQRS and, as crazy as it sounds, apply it in the front end. Leverage the power of reactive programming and implement the above architectures in a real live example
  </p>
  "
  subtype: presentation
  # advanced: true
  speakers: ["Michael"]
-
  id: "Stanimira"
  title: "Supercharging Angular libraries with 'ng add' and schematics"
  description: "<p>
    You have just written an amazing Angular library. You put it on GitHub because it will save tons of time for other developers. You impatiently refresh the npm page checking the downloads.
    </p><p>
    Wait, why is nobody using it? Is it because of the tedious 12-step setup? Don't worry! The Angular CLI comes to the rescue! The `ng add` command allows your library to do all configurations automatically.
    </p><p>
    Come and see how you can turn your boring setup into an installation schematic - a simple, declarative script that will be executed whenever somebody 'ng-adds' your library.
    </p>
  "
  subtype: presentation
  # advanced: true
  speakers: ["Stanimira"]
-
  id: "Elad"
  title: "Advanced Angular Animations"
  description: "Learn how to use Angular Animations like a pro, a complete walk through from basic usages to advanced everyday usages with a look into the future."
  subtype: presentation
  # advanced: true
  speakers: ["Elad"]
-
  id: "empty"
  title: ""
  description: ""
  subtype: presentation
  speakers: [""]